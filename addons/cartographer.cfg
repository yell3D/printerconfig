[scanner]
mcu:                   scanner  
sensor:           cartographer
sensor_alt:             beacon     # > you can have sensor_alt: beacon if you really wanted to shit stir ðŸ˜„
mesh_main_direction:         y
## Yell Customs
mesh_runs:                   2
samples_tolerance_retries:  20
#scanner_touch_max_temp:    155

[temperature_sensor Cartographer_MCU]
sensor_type:   temperature_mcu
sensor_mcu:            scanner
min_temp:                    0
max_temp:                  105

[adxl345]
cs_pin:            scanner:PA3
spi_bus:                  spi1
axes_map:            x, -y, -z

#[adxl345] 
#cs_pin:            scanner:PA0


[stepper_z]
homing_retract_dist:         0
endstop_pin: probe:z_virtual_endstop

[bed_mesh]
speed:                     400
probe_count:                41, 41
mesh_pps:                    0,  0
move_check_distance:         3     # 5
split_delta_z:               0.01  # 0.025
#zero_reference_position:  # needs to be set for reach printer, we dont set here as we include carto at the bottom

[gcode_macro CARTO_PREHEAT_COIL]
description: parks the toolhead mid X on Y min at 5 (above 80Â°C) or 15 Z
gcode:
  {% set th = printer.toolhead %}
  G90
  G0 Z20
  G0 X{th.axis_maximum.x / 2} Y{th.axis_minimum.y + 10} F9000
  {% if temp_bed > 80 %} {% set probe_retract = 15 %} {% else %} {% set probe_retract = 5 %} {% endif %}
  PROBE_ACCURACY SAMPLES=1 SAMPLE_RETRACT_DIST=5 PROBE_SPEED=5
  G0 Z{probe_retract}

[gcode_macro CARTO_MEASURE_PLANARBACKLASH]
description: Calibrate backlash at each corner
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    { action_raise_error("Printer not homed!"   ) } {% endif %}
  {% if printer.configfile.settings.scanner is not defined   %}
    { action_raise_error("[Scanner] not found!" ) } {% endif %}
  {% if printer.configfile.config.bed_mesh.zero_reference_position is not defined %}
    { action_raise_error("zero_reference_position not found!")} {% endif %}
    
  {% if printer.configfile.settings.z_tilt is defined %}
    {% set planeCfg = "z_tilt"        %}
    {% set planeCMD = "Z_TILT_ADJUST" %}
  {% elif printer.configfile.settings.quad_gantry_level is defined %} 
    {% set planeCfg = "quad_gantry_level" %}
    {% set planeCMD = "QUAD_GANTRY_LEVEL" %}
  {% elif printer.configfile.settings.z_tilt_ng is defined %}
    {% set planeCfg = "z_tilt_ng"     %}
    {% set planeCMD = "Z_TILT_ADJUST" %}
  {% else %}
    { action_raise_error("This printer has no ztilt / QGL ") }
  {% endif %}
  
  {% set planeDef = printer.configfile.settings[planeCfg] %}
  {% set planeRange = planeDef.points | count             %}
  {% if not printer[planeCfg].applied  %} 
    { action_raise_error("Plane not leved, run {planeCMD} first")} {% endif %} 

  {% set moveSpeed  = planeDef['speed'] | int * 60  %}
  {% set moveAccel  = printer.configfile.config.printer.max_accel | int * 0.80 %}
  {% set moveHeight = 10 if planeDef['horizontal_move_z'] < 10 else planeDef['horizontal_move_z'] %}

  RESPOND PREFIX=ðŸ’¨ MSG="Moving Height: {moveHeight} Speed: {planeDef['speed']} Accel: {moveAccel} You have 4s to hit eStop"
  G4 P4000
  G90
  G0 Z{moveHeight}

  {% for i in range(planeRange) %}
    {% set testX = planeDef.points[i][0]|float %}
    {% set testY = planeDef.points[i][1]|float %}
    RESPOND PREFIX=ðŸ”¢ MSG="Point {i+1}/{planeRange+1} ({planeCMD})"
    RESPOND PREFIX=ðŸ“Œ MSG="Tesing at X={testX} Y={testY}"

    G1 X{testX} Y{testY} Z{moveHeight} F{moveAccel}
    M400
    CARTOGRAPHER_ESTIMATE_BACKLASH
    M400
    G0 Z{moveHeight}
  {% endfor %}

  {% set posCenter = printer.configfile.config.bed_mesh.zero_reference_position %}
  {% set testX = posCenter.split(",")[0]|float %}
  {% set testY = posCenter.split(",")[1]|float %}
  RESPOND PREFIX=ðŸš© MSG="Point {planeRange+1}/{planeRange+1} (zero_reference_position)"
  RESPOND PREFIX=ðŸ“Œ MSG="Tesing at X={testX} Y={testY}"

  G1 X{testX} Y{testY} Z{moveHeight} F{moveAccel}
  M400
  CARTOGRAPHER_ESTIMATE_BACKLASH
  M400
  G0 Z{moveHeight}

[gcode_macro CARTO_MEASURE_TAP_DATA]
gcode:

    G1 Z5 F1200
    M400 ; wait until motor movement finishes
    G4 P1000; wait a second so the printer doesn't shake
    CARTOGRAPHER_STREAM FILENAME=tapdata2mms.csv
    G1 Z-0.5 F120
    M400 ; wait until motor movement finishes
    G4 P1000; wait a second so the printer doesn't shake
    CARTOGRAPHER_STREAM FILENAME=tapdata2mms.csv
    
    G1 Z20 F1200
    G28
    G1 Z5 F1200
    
    M400 ; wait until motor movement finishes
    G4 P1000; wait a second so the printer doesn't shake
    CARTOGRAPHER_STREAM FILENAME=tapdata3mms.csv
    G1 Z-0.5 F200
    M400 ; wait until motor movement finishes
    G4 P1000; wait a second so the printer doesn't shake
    CARTOGRAPHER_STREAM FILENAME=tapdata3mms.csv
    
    G1 Z20 F1200