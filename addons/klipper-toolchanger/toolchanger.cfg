[gcode_macro _ZIGZAG_BRUSH_WIPE]
description: _ZIGZAG_BRUSH_WIPE LOOPS=1 DEPTH=8 SPEED=50
gcode:
  {% set depth   = params.DEPTH  | default(10)   | int %}
  {% set loops   = params.LOOPS  | default(5)   | int %}
  {% set speed   = params.SPEED  | default(100) * 60 %}
  {% set halfend = params.HALFEND| default('false') | string %}
  {% set x_offsets = [-4, 4, -4] %}
  {% set count = x_offsets|length %}
  {% set y_step = depth / count %}

  RESPOND PREFIX=üîÉ MSG="ZigZag Brush Wipe"
  G91
  {% for l in range(loops) %}
    {% for i in range(count) %}; Forward Zigzag (Y+)
      {% set x = x_offsets[i] %}
      G0 X{x} Y{y_step} F{speed * 60}
    {% endfor %}
    {% if count % 2 != 0 %} G0 X{x_offsets[1]} F{speed * 60} {% endif %}

    {% if not (halfend == "true" and loop.last) %}
      {% for i in range(count) %}  ; Backward Zigzag (Y-)
        {% set x = x_offsets[i] %}
        G0 X{x} Y-{y_step} F{speed * 60}
      {% endfor %}
      
      {% if count % 2 != 0 %}  G0 X{x_offsets[1]} F{speed * 60} {% endif %}
    {% endif %}
  {% endfor %}
  G90


[toolchanger] ; toolchanger is basically a template  or parent object for each tool
t_command_restore_axis: XYZ
uses_axis: xy 
verify_tool_pickup: True

initialize_on: manual
initialize_gcode:
  DETECT_ACTIVE_TOOL_PROBE
  _INITIALIZE_FROM_DETECTED_TOOL

# Extra params to pass to pickup/dropoff gcode. Accessible in the gcode via `toolchanger.params_name`.
# Also will be copied to any tools for this toolchanger with local values overriding. 
params_safe_toolhead_y: 120  # safe motion while toolhead is present
params_safe_shuttle_y: 20  # safe motion with no toolhead present
params_close_y: 15   # Y position right before the magnets start to grab
params_attach_y: 2   # Y position matching the large opening of the slots
params_park_z: 237   # Z position when the screws are at the bottom of the slots
params_fast_speed: 30000 # 36000 # Go as speed_fast as we can # Was 30000
params_path_speed: 1500 # 7200 # Was 1500
# Default shaper params
params_input_shaper_freq_x: 0
params_input_shaper_freq_y: 0


error_gcode:
  PAUSE_BASE

before_change_gcode:
  {% set tn = "T"+(tool.tool_number|string) %}
  {% if printer["gcode_macro " + tn ] %}
     SET_GCODE_VARIABLE MACRO={tn} VARIABLE=color VALUE="''"
  {% endif %}
  SET_VELOCITY_LIMIT ACCEL=15000 ACCEL_TO_DECEL=7500 SQUARE_CORNER_VELOCITY=9

after_change_gcode: 
  {% set tn = "T"+(tool.tool_number|string) %}
  {% if printer["gcode_macro " + tn ] %}
     SET_GCODE_VARIABLE MACRO={tn} VARIABLE=color VALUE="'c44'"
  {% endif %}
  #{% if tool.params_input_shaper_freq_x %}
  #  SET_INPUT_SHAPER SHAPER_TYPE_X={tool.params_input_shaper_type_x} SHAPER_FREQ_X={tool.params_input_shaper_freq_x} SHAPER_TYPE_Y={tool.params_input_shaper_type_y} SHAPER_FREQ_Y={tool.params_input_shaper_freq_y}
  #{% endif %}
  SET_VELOCITY_LIMIT ACCEL=5000 ACCEL_TO_DECEL=2500 SQUARE_CORNER_VELOCITY=5

dropoff_gcode:
  {% set park_x = tool.params_park_x|float %}
  {% set detach_x = tool.params_detach_x|float %}
  {% set speed_fast = tool.params_fast_speed|float %}
  {% set speed_path = tool.params_path_speed|float %}
  {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
  {% set cur_z = printer.toolhead.position.z|float %}

#  {% if printer.pause_resume.is_paused %}
#    RESPOND PREFIX=‚è∏Ô∏è MSG="Stopping dropoff as printer is paused {tool.name}"
#  {% else %}
  
    RESPOND PREFIX=‚¨áÔ∏èÔ∏è MSG="Dropping off {tool.name}"
    G90
    {% if cur_z < 5.0  %} G0 Z{cur_z+5.0} F{speed_path}
      {% else %}          G0 Z{[cur_z+0.64, max_z]|min} F{speed_path}
    {% endif %}
  
    G0 X{detach_x} Y{tool.params_safe_toolhead_y} F{speed_fast}
    G0 Y{tool.params_attach_y} F{speed_fast}
  
    G0 X{park_x} F{speed_path}
  
    G0 Y{tool.params_close_y} F{speed_path}
    G0 Y{tool.params_safe_shuttle_y} F{speed_fast}
    
    {% if (tool.extruder) %} SET_STEPPER_ENABLE STEPPER={tool.extruder} ENABLE=0 {% endif %}

 #   DETECT_ACTIVE_TOOL_PROBE
 #   _PAUSE_IF_INCORRECT_TOOL T=-1
 # {% endif %}
  

pickup_gcode:
  {% set park_x = tool.params_park_x|float %}
  {% set detach_x = tool.params_detach_x|float %}
  {% set speed_fast = tool.params_fast_speed|float %}
  {% set speed_path = tool.params_path_speed|float %}
  {% set tn = "T"+(tool.tool_number|string) %} ; T0


#  {% if printer.pause_resume.is_paused %}
#    RESPOND PREFIX=‚è∏Ô∏è MSG="Stopping pickup as printer is paused {tool.name}"
#  {% else %}
  
  
    #     RESPOND PREFIX="DEBUG" MSG='step into 190'
    RESPOND PREFIX=‚¨ÜÔ∏è MSG="Picking up {tool.name}"
    G90
   
    G0 Y{tool.params_safe_shuttle_y} F{speed_fast}
    G0 X{park_x} F{speed_fast}
    G0 Y{tool.params_close_y} F{speed_fast}
    
    {% if tool.extruder %} M109 T{tool.tool_number} S{printer[tool.extruder].target|int}{% endif %}
  
    # HotSnot Part     #
    {% if tool.extruder and printer[tool.extruder].target|int > 190  %}
  
      SET_STEPPER_ENABLE STEPPER={tool.extruder} ENABLE=1
      {% if printer["gcode_macro " + tn ].tool_used|lower != 'true' %}
        RESPOND PREFIX=ü§ß MSG="HotSnoting {tool.name} for first use"
        SET_GCODE_VARIABLE MACRO={tn} VARIABLE=tool_used VALUE=True
        G0 Y{tool.params_attach_y} F{speed_path}
        {% if (park_x - detach_x) > 0 %} G0 X{detach_x - 3} F{speed_path}
        {% else %}                       G0 X{detach_x + 3} F{speed_path}
        {% endif %}
  #      _ZIGZAG_BRUSH_WIPE LOOPS=5 DEPTH=5 SPEED=50  ; brush
        M83
        G1 E10 F600                      ; poop
        #_ZIGZAG_BRUSH_WIPE LOOPS=5       ; brush and knock off
        #G0 X{park_x} F{speed_fast}
        #G0 Y{tool.params_attach_y + 5} F{speed_path}
        G92 E0
  #      ZIGZAG_BRUSH_WIPE LOOPS=2 DEPTH=10 SPEED=100 HALFEND=true
      {% endif %}
    G1 E-4 F600
    {% endif %}
    ####################
  
    {% if tool.params_input_shaper_freq_x > 0 and printer.idle_timeout.state|upper == "PRINTING" %}
      SET_INPUT_SHAPER SHAPER_TYPE_X={tool.params_input_shaper_type_x} SHAPER_FREQ_X={tool.params_input_shaper_freq_x} SHAPER_TYPE_Y={tool.params_input_shaper_type_y} SHAPER_FREQ_Y={tool.params_input_shaper_freq_y}
    {% endif %}
    
    G0 Y{tool.params_attach_y} F{speed_path}
    G0 X{detach_x} F{speed_path}
    G0 Y{tool.params_safe_toolhead_y} F{speed_fast}
  
    # bed clamps
    ;{% if (park_x - detach_x) > 0 %} G0 X{detach_x - 10} F{speed_fast}
    ;{% else %}                       G0 X{detach_x + 10} F{speed_fast}
    ;{% endif %}
  
    {% if 'X' in restore_position and 'Y' in restore_position  %} 
      G0 X{restore_position.X} Y{restore_position.Y} F{speed_fast}
    {% else %}
        {% if 'X' in restore_position %} G0 X{restore_position.X} F{speed_fast} {% endif %}
        {% if 'Y' in restore_position %} G0 Y{restore_position.Y} F{speed_fast} {% endif %}
    {% endif %}
    {% if 'Z' in restore_position %} G0 Z{restore_position.Z} F{speed_fast} {% endif %}
#    DETECT_ACTIVE_TOOL_PROBE
#    _PAUSE_IF_INCORRECT_TOOL T={tool.tool_number}
#  {% endif %}


[delayed_gcode _SETUP_TOOLCHANGER_ONBOOT]
initial_duration: 6
gcode:
  INITIALIZE_TOOLCHANGER

[gcode_macro _INITIALIZE_FROM_DETECTED_TOOL]
gcode:
  {% if printer.tool_probe_endstop.active_tool_number|int == -1 %} 
#    {% if (printer.toolchanger.homing_toolless and 'z' in printer.toolhead.homed_axes) %}
#      RESPOND TYPE=echo MSG='No tool found, picking up T{printer.toolchanger.tool_numbers[0]}'
#      SELECT_TOOL T={printer.toolchanger.tool_numbers[0]} FORCE_PICKUP=1 RESTORE_AXIS=Z
#      DETECT_ACTIVE_TOOL_PROBE
#      INITIALIZE_TOOLCHANGER T={printer.toolchanger.tool_numbers[0]}
#    {% else %}
      RESPOND TYPE=error MSG='Failed to detect active tool'
      PAUSE_BASE
#    {% endif %}
  {% else %}
    INITIALIZE_TOOLCHANGER T={printer.tool_probe_endstop.active_tool_number}
  {% endif %}  
  
