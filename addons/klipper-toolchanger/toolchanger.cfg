[gcode_macro _ZIGZAG_BRUSH_WIPE]
description: _ZIGZAG_BRUSH_WIPE LOOPS=1 DEPTH=8 SPEED=50
gcode:
  {% set depth   = params.DEPTH  | default(8)   | int %}
  {% set loops   = params.LOOPS  | default(5)   | int %}
  {% set speed   = params.SPEED  | default(50) | int %}
  {% set x_offsets = [-5, 5, -5] %}
  {% set count = x_offsets|length %}
  {% set y_step = depth / count %}

  RESPOND PREFIX=üîÉ MSG="ZigZag Brush Wipe"
  G91
  {% for l in range(loops) %}
    {% for i in range(count) %}; Forward Zigzag (Y+)
      {% set x = x_offsets[i] %}
      G0 X{x} Y{y_step} F{speed * 60}
    {% endfor %}

    {% if count % 2 != 0 %} 
      G0 X{x_offsets[1]} F{speed * 60}
    {% endif %}

    {% for i in range(count) %}  ; Backward Zigzag (Y-)
      {% set x = x_offsets[i] %}
      G0 X{x} Y-{y_step} F{speed * 60}
    {% endfor %}
    
    {% if count % 2 != 0 %} 
      G0 X{x_offsets[1]} F{speed * 60}
    {% endif %}
  {% endfor %}
  G90
  




[toolchanger] ; toolchanger is basically a template  or parent object for each tool
t_command_restore_axis: "" # Z # XYZ    ; orca does this already good
initialize_on: first-use
uses_axis: xy 

# Extra params to pass to pickup/dropoff gcode. Accessible in the gcode via `toolchanger.params_name`.
# Also will be copied to any tools for this toolchanger with local values overriding. 
params_safe_toolhead_y: 120  # safe motion while toolhead is present
params_safe_shuttle_y: 20  # safe motion with no toolhead present
params_close_y: 15   # Y position right before the magnets start to grab
params_attach_y: 2   # Y position matching the large opening of the slots
params_park_z: 237   # Z position when the screws are at the bottom of the slots
params_fast_speed: 36000 # Go as fast as we can # Was 30000
params_path_speed: 7200 # Was 1500
# Default shaper params
params_input_shaper_freq_x: 117.8
params_input_shaper_freq_y: 80.2


error_gcode:
  {% if printer["gcode_macro PAUSE_BASE"] is defined %} PAUSE_BASE {% else %} PAUSE {% endif %}

before_change_gcode:
  {% set tn = "T"+(tool.tool_number|string) %}
  {% if printer["gcode_macro " + tn ] %}
     SET_GCODE_VARIABLE MACRO={tn} VARIABLE=color VALUE="''"
  {% endif %}

after_change_gcode:
  {% set tn = "T"+(tool.tool_number|string) %}
  {% if printer["gcode_macro " + tn ] %}
     SET_GCODE_VARIABLE MACRO={tn} VARIABLE=color VALUE="'c44'"
  {% endif %}
  {% if tool.params_input_shaper_freq_x %}
    SET_INPUT_SHAPER SHAPER_TYPE_X={tool.params_input_shaper_type_x} SHAPER_FREQ_X={tool.params_input_shaper_freq_x} SHAPER_TYPE_Y={tool.params_input_shaper_type_y} SHAPER_FREQ_Y={tool.params_input_shaper_freq_y}
  {% endif %}

dropoff_gcode:
  {% set park_x = tool.params_park_x|float %}
  {% set detach_x = tool.params_detach_x|float %}
  {% set fast = tool.params_fast_speed|float %}
  {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
  {% set cur_z = printer.toolhead.position.z|float %}
  
  RESPOND PREFIX=‚¨áÔ∏è MSG="Dropping off {tool.name}"

  G90
  {% if cur_z < 5.0  %} G0 Z{cur_z+10.0} F{fast}
    {% else %}          G0 Z{[cur_z+1.0, max_z]|min} F{fast}
  {% endif %}

  G0 X{detach_x} Y{tool.params_safe_toolhead_y} F{fast}
  G0 Y{tool.params_attach_y} F{fast}

  G0 X{park_x} F{tool.params_path_speed}
  G0 Y{tool.params_close_y} F{tool.params_path_speed}
  G0 Y{tool.params_safe_shuttle_y} F{fast}

pickup_gcode:
  {% set park_x = tool.params_park_x|float %}
  {% set detach_x = tool.params_detach_x|float %}
  {% set fast = tool.params_fast_speed|float %}
  
  RESPOND PREFIX=‚¨ÜÔ∏è MSG="Picking up {tool.name}"
  G90
 
  G0 Y{tool.params_safe_shuttle_y} F{fast}
  G0 X{park_x} F{fast}
  G0 Y{tool.params_close_y} F{fast}
  
  {% if tool.extruder %} 
    M109 T{tool.tool_number} S{printer[tool.extruder].target|int}
    # HotSnot Part     #
    {% set tn = "T"+(tool.tool_number|string) %}
    {% if (tool.extruder)
       and (printer.print_stats.state == "printing")
       and (printer.extruder.can_extrude|lower != 'true')
       and (printer["gcode_macro " + tn ].tool_used|lower != 'true')  %}
       
      RESPOND PREFIX=ü§ß MSG="HotSnoting {tool.name} for first use" 
      SET_STEPPER_ENABLE STEPPER={tool.extruder} ENABLE=1
      SET_GCODE_VARIABLE MACRO={tn} VARIABLE=tool_used VALUE=True
      M106 S255
      M83
      {% if (park_x - detach_x) > 0 %} G0 X{detach_x - 5} F{tool.params_path_speed}
      {% else %}                       G0 X{detach_x + 5} F{tool.params_path_speed}
      {% endif %}
      _ZIGZAG_BRUSH_WIPE LOOPS=2 DEPTH=10 SPEED=100
      G1 E10 F600
      G92 E0
    {% endif %}
    ####################
  {% endif %}

  G0 Y{tool.params_attach_y} F{tool.params_path_speed}
  G0 X{detach_x} F{tool.params_path_speed}
  

  G0 Y{tool.params_safe_toolhead_y} F{fast}

  # bed clamps
  {% if (park_x - detach_x) > 0 %} G0 X{detach_x - 10} F{fast}
  {% else %}                       G0 X{detach_x + 10} F{fast}
  {% endif %}

  {% if 'X' in restore_position %} G0 X{restore_position.X} F{fast} {% endif %}
  {% if 'Y' in restore_position %} G0 Y{restore_position.Y} F{fast} {% endif %}
  {% if 'Z' in restore_position %} G0 Z{restore_position.Z} F{fast} {% endif %}

[gcode_macro _INITIALIZE_FROM_DETECTED_TOOL]
gcode:
  DETECT_ACTIVE_TOOL_PROBE
  _INITIALIZE_FROM_DETECTED_TOOL_IMPL

[gcode_macro _INITIALIZE_FROM_DETECTED_TOOL_IMPL]
gcode:
  {% if printer.tool_probe_endstop.active_tool_number | int == -1 %}
    RESPOND TYPE=error MSG='Failed to detect active tool'
    PAUSE
  {% else %}
    { action_respond_info('initialize from detected tool')}
    INITIALIZE_TOOLCHANGER T={printer.tool_probe_endstop.active_tool_number}
  {% endif %}

[delayed_gcode _SETUP_TOOLCHANGER_ONBOOT]
initial_duration: 6
gcode: 
  _SETUP_TOOLCHANGER
  
[gcode_macro _SETUP_TOOLCHANGER]
gcode: 
  INITIALIZE_TOOLCHANGER
  G4 P500
  _INITIALIZE_FROM_DETECTED_TOOL