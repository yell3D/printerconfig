[homing_override]
axes: xyz
gcode:
  {% set backoff_distance = 10 | float %}
  
  {% set moveAccel  = printer.configfile.config.printer.max_accel | int * 0.80 %}
  
  # Reset parameters.
  {% set X, Y, Z = False, False, False %}
  # Which axes have been requested for homing.
  {% if not 'X' in params
      and not 'Y' in params
      and not 'Z' in params %}
      {% set X, Y, Z = True, True, True %}
      # Raise the gantry 10mm.
      SET_KINEMATIC_POSITION Z=0
      G1 Z10 F2000
  {% else %}
      {% if 'X' in params %}
          {% set X = True %}
      {% endif %}
      {% if 'Y' in params %}
          {% set Y = True %}
      {% endif %}
      {% if 'Z' in params %}
          {% set Z = True %}
      {% endif %}
  {% endif %}
  {% if printer.toolchanger.status == "uninitialized" or printer.toolchanger.tool|int == -1 %}
      INITIALIZE_TOOLCHANGER
  {% endif %}

  {% if Y %}
    STATUS_HOMING
    G28 Y
    {% if backoff_distance > 0 %}
      {% set positive_dir = printer.configfile.settings.stepper_y.homing_positive_dir | abs %} 
      {% if positive_dir == True %}
        G0 Y{printer.configfile.settings.stepper_y.position_endstop - backoff_distance} 
      {% else %}
        G0 Y{printer.configfile.settings.stepper_y.position_endstop + backoff_distance} 
      {% endif %}
    {% endif %}  
  {% endif %}
  {% if X %}
    STATUS_HOMING
    G28 X
    {% if backoff_distance > 0 %}
      {% set positive_dir = printer.configfile.settings.stepper_x.homing_positive_dir | abs %} 
      {% if positive_dir == True %}
        G0 X{printer.configfile.settings.stepper_x.position_endstop - backoff_distance} 
      {% else %}
        G0 X{printer.configfile.settings.stepper_x.position_endstop + backoff_distance} 
      {% endif %}
    {% endif %}  
  {% endif %}
  {% if Z %}
    STATUS_HOMING
    # Move to z position switch location
    {% if printer.configfile.settings.bed_mesh.zero_reference_position  is defined %}
       {% set posCenter = printer.configfile.config.bed_mesh.zero_reference_position %}
       G0 X{posCenter.split(",")[0]|float} Y{posCenter.split(",")[1]|float} F{moveAccel}
    {% else %}
      #G0 X100 Y100 F9000
      { action_raise_error("bed_mesh missing option zero_reference_position") }
    {% endif %}  
    G28 Z
    G0 Z10 F9000
  {% endif %}
  
  STATUS_READY

[gcode_macro _TAP_PROBE_ACTIVATE]
description: Ensure safe temp for bed probing
gcode:
    {% set max_temp = 170 %}
    {% set actual_temp = printer[params.HEATER].temperature %}
    {% set target_temp = printer[params.HEATER].target %}
    {% if target_temp > max_temp %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (target_temp, max_temp)) }
        SET_HEATER_TEMPERATURE HEATER={params.HEATER} TARGET={ max_temp|int - 5 }
    {% endif %}
    # Temperature target is already low enough, but nozzle may still be too hot.
    {% if actual_temp > max_temp  + 2 %}
        { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (actual_temp, max_temp)) }
        TEMPERATURE_WAIT SENSOR={params.HEATER} MAXIMUM={ max_temp }
    {% endif %}