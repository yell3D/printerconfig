
[gcode_macro TOOLCHANGE_DEMO]
description: [SAMPLES=<int>]
  Run random tool changes.
  SAMPLES= Number of changes to run, default is 5 and starting with T0.
gcode:
    {% set t = params.SAMPLES|default(5)|int %}
    {% set toolmod = printer.toolchanger.tool_numbers | length %}
    {% for n in range(t) %}
      RESPOND TYPE=echo MSG='{"n is: " ~ n}'
      RESPOND TYPE=echo MSG='{"mod 2: " ~ (n % toolmod)}'
      T{(n % toolmod)}
      G4 P500
    {% endfor %}


[gcode_macro TX]
gcode:
  {% set tool_number = params.TN|int %}
  {% set svf = printer.save_variables.variables %}
  # Grab the current tool number so we can remove any z offset that is present
  {% set z_offset_val = svf[ 't' + printer.toolchanger.tool_number|string + '_offset_z'] %}
  # Subtract the tool z_offset from the homing_origin, the remainder is any tweaked z offset
  {% set modified_z = printer.gcode_move.homing_origin.z|float|round(3) - z_offset_val|float|round(3) %}
  # Clear the offsets set by macros
  SET_GCODE_OFFSET X=0 Y=0 Z=0 MOVE=1
  # Update toolhead lights if applicable
  {% if printer["gcode_macro _sb_vars"] is defined %} STATUS_READY {% endif %}
  # Activate the selected tool
  SELECT_TOOL T={tool_number}
  # Apply the macro offsets, including modified z settings
  SET_GCODE_OFFSET X={svf[ 't' + tool_number|string + '_offset_x']|float|round(3)} Y={svf[ 't' + tool_number|string + '_offset_y']|float|round(3)} Z={svf[ 't' + tool_number|string + '_offset_z'] + modified_z} MOVE=1
  # Update toolhead lights if applicable
  {% if printer["gcode_macro _sb_vars"] is defined %}
    {% if printer.idle_timeout.state != "Printing" %}
      STATUS_BUSY
    {% else %}
      STATUS_PRINTING
    {% endif %}
  {% endif %}
  # Update the current tool variable in the save file
  SAVE_VARIABLE VARIABLE=current_tool VALUE={tool_number}

[gcode_macro T0]
variable_color: "blue"
variable_tool_number: 0
gcode:
  TX TN={tool_number}

[gcode_macro T1]
variable_color: "orange"
variable_tool_number: 1
gcode:
  TX TN={tool_number}