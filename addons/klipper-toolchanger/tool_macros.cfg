
[gcode_macro TOOLCHANGE_DEMO]
description: [SAMPLES=<int>]
  Run random tool changes.
  SAMPLES= Number of changes to run, default is 5 and starting with T0.
gcode:
    {% set t = params.SAMPLES|default(5)|int %}
    {% set toolmod = printer.toolchanger.tool_numbers | length %}
    {% for n in range(t) %}
      RESPOND TYPE=echo MSG='{"n is: " ~ n}'
      RESPOND TYPE=echo MSG='{"mod 2: " ~ (n % toolmod)}'
      T{(n % toolmod)}
      G4 P500
    {% endfor %}

[gcode_macro _APPLY_ACTIVE_TOOL_GCODE_OFFSETS]
gcode:
  {% set tool_number = printer.toolchanger.tool_number  %}
  {% if tool_number != -1 %}
    {% set svf = printer.save_variables.variables %}
    SET_GCODE_OFFSET X={svf[ 't' + tool_number|string + '_offset_x']|float|round(3)} Y={svf[ 't' + tool_number|string + '_offset_y']|float|round(3)} Z={svf[ 't' + tool_number|string + '_offset_z']} MOVE=1
  {% else %}
    RESPOND PREFIX=‚ö†Ô∏è MSG="No tool loaded, got -1"
  {% endif %}
  
[gcode_macro TX]
gcode:
  {% set tool_number = params.TN|int %}
  {% set svf = printer.save_variables.variables %}

  {% if printer["gcode_macro _sb_vars"] is defined %} STATUS_READY {% endif %}

  {% if 'y' in printer.toolhead.homed_axes and printer.toolhead.position.y|float < printer.toolchanger.params_safe_toolhead_y|float %}
    G90
    G0 Y{printer.toolchanger.params_safe_toolhead_y} F{printer.toolchanger.params_fast_speed}
  {% endif %}
    
  SELECT_TOOL T={tool_number}
  _APPLY_ACTIVE_TOOL_GCODE_OFFSETS
  {% if printer["gcode_macro _sb_vars"] is defined %}
    {% if printer.idle_timeout.state != "Printing" %} STATUS_BUSY
    {% else %} STATUS_PRINTING {% endif %}
  {% endif %}

[gcode_macro _undocked_brushpark]
gcode:
  {% set tool_number = params.TN|int if params.TN is defined else printer.toolchanger.tool_number %}
  
  RESPOND PREFIX=üèùÔ∏è MSG="Brushparking T{tool_number}"
  G90
  {% set cur_z = printer.toolhead.position.z|float %}
  {% if cur_z < 5.0  %} G0 Z{cur_z+10.0} F{printer.toolchanger.params_fast_speed} {% endif %}
  
  G0 Y{printer.toolchanger.params_safe_toolhead_y} F{printer.toolchanger.params_fast_speed}
  {% if params.TN is defined and printer.toolchanger.tool_number != 0 %} 
    SELECT_TOOL T=0 RESTORE_AXIS=
  {% else %}
    G0 X{printer.configfile.settings['tool t' + tool_number|string].params_detach_x} F{printer.toolchanger.params_fast_speed}
  {% endif %}
  G0 Y{printer.toolchanger.params_attach_y + 5} F{printer.toolchanger.params_path_speed}


[gcode_macro _TAP_PROBE_ACTIVATE]
description: Ensure safe temp for bed probing
gcode:
    {% set max_temp = 160 %}
    {% set actual_temp = printer[params.HEATER].temperature %}
    {% set target_temp = printer[params.HEATER].target %}
    {% if target_temp > max_temp %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (target_temp, max_temp)) }
        SET_HEATER_TEMPERATURE HEATER={params.HEATER} TARGET={ max_temp|int - 5 }
        M109 T
    {% endif %}
    # Temperature target is already low enough, but nozzle may still be too hot.
    {% if actual_temp > max_temp  + 2 %}
        { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (actual_temp, max_temp)) }
        TEMPERATURE_WAIT SENSOR={params.HEATER} MAXIMUM={ max_temp }
    {% endif %}

[tool_probe_endstop]
  # seconds to wait before announcing a crash, if the probe stops
  #triggering before this, no crash is reported. 
  crash_mintime: 2
  crash_gcode:
    RESPOND TYPE=error MSG='Tool not detected, expected {printer.toolchanger.tool_number}. Pausing the print.' 
    {% if printer["gcode_macro PAUSE_BASE"] is defined %} PAUSE_BASE {% else %} PAUSE {% endif %}