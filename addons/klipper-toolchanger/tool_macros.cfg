[tool_probe_endstop]
  crash_gcode:
    RESPOND TYPE=error MSG='Tool not detected, expected {printer.toolchanger.tool_number}. Pausing the print.' 
    M84
    TURN_OFF_HEATERS


[gcode_macro M104]
rename_existing: M104.1
description: [T<index>] [S<temperature>]
  Set tool temperature.
  T= Tool number, optional. If this parameter is not provided, the current tool is used.
  S= Target temperature
gcode:
  {% if params.T is defined %}
    {% set newparameters = "" %}
    {% set newparameters = newparameters ~ " T="~params.T %}
    {% if params.S is defined %}
      {% set newparameters = newparameters ~ " TARGET="~params.S %}
    {% endif %}
    SET_TOOL_TEMPERATURE{newparameters}
  {% else %}
    M104.1 {rawparams}
  {% endif %}

[gcode_macro M109]
rename_existing: M109.1
description: [T<index>] [S<temperature>]
  Set tool temperature and wait.
  T= Tool number, optional. If this parameter is not provided, the current tool is used.
  S= Target temperature
gcode:
  {% if params.T is defined %}
    {% set newparameters = "" %}
    {% set newparameters = newparameters ~ " T="~params.T %}
    {% if params.S is defined %}
      {% set newparameters = newparameters ~ " TARGET="~params.S %}
    {% endif %}
    SET_TOOL_TEMPERATURE WAIT=1 {newparameters}
  {% else %}
    M109.1 {rawparams}
  {% endif %}

##########################################################################################
# Foreach section:
    
[gcode_macro T0]
variable_color: ""
variable_tool_number: 0
gcode:
  {% set svf = printer.save_variables.variables %}
  # Grab the current tool number so we can remove any z offset that is present
  {% set z_offset_val = svf[ 't' + printer.toolchanger.tool_number|string + '_offset_z'] %}
  # Subtract the tool z_offset from the homing_origin, the remainder is any tweaked z offset
  {% set modified_z = printer.gcode_move.homing_origin.z|float|round(3) - z_offset_val|float|round(3) %}
  # Clear the offsets set by macros
  SET_GCODE_OFFSET X=0 Y=0 Z=0 MOVE=1
  # Update toolhead lights if applicable
  {% if printer["gcode_macro _sb_vars"] is defined %}
    STATUS_READY
  {% endif %}
  # Activate the selected tool
  SELECT_TOOL T={tool_number}
  # Apply the macro offsets, including modified z settings
  SET_GCODE_OFFSET X={svf[ 't' + tool_number|string + '_offset_x']|float|round(3)} Y={svf[ 't' + tool_number|string + '_offset_y']|float|round(3)} Z={svf[ 't' + tool_number|string + '_offset_z'] + modified_z} MOVE=1
  # Update toolhead lights if applicable
  {% if printer["gcode_macro _sb_vars"] is defined %}
    {% if printer.idle_timeout.state != "Printing" %}
      STATUS_BUSY
    {% else %}
      STATUS_PRINTING
    {% endif %}
  {% endif %}
  # Update the current tool variable in the save file
  SAVE_VARIABLE VARIABLE=current_tool VALUE={tool_number}

[gcode_macro T1]
variable_color: ""
variable_tool_number: 1
gcode:
  {% set svf = printer.save_variables.variables %}
  # Grab the current tool number so we can remove any z offset that is present
  {% set z_offset_val = svf[ 't' + printer.toolchanger.tool_number|string + '_offset_z'] %}
  # Subtract the tool z_offset from the homing_origin, the remainder is any tweaked z offset
  {% set modified_z = printer.gcode_move.homing_origin.z|float|round(3) - z_offset_val|float|round(3) %}
  # Clear the offsets set by macros
  SET_GCODE_OFFSET X=0 Y=0 Z=0 MOVE=1
  # Update toolhead lights if applicable
  {% if printer["gcode_macro _sb_vars"] is defined %}
    STATUS_READY
  {% endif %}
  # Activate the selected tool
  SELECT_TOOL T={tool_number}
  # Apply the macro offsets, including modified z settings
  SET_GCODE_OFFSET X={svf[ 't' + tool_number|string + '_offset_x']|float|round(3)} Y={svf[ 't' + tool_number|string + '_offset_y']|float|round(3)} Z={svf[ 't' + tool_number|string + '_offset_z'] + modified_z} MOVE=1
  # Update toolhead lights if applicable
  {% if printer["gcode_macro _sb_vars"] is defined %}
    {% if printer.idle_timeout.state != "Printing" %}
      STATUS_BUSY
    {% else %}
      STATUS_PRINTING
    {% endif %}
  {% endif %}
  # Update the current tool variable in the save file
  SAVE_VARIABLE VARIABLE=current_tool VALUE={tool_number}