# included by ../skeleton/_mcu_base.conf
# requires module:  wget -P ~/klipper/klippy/extras/ https://raw.githubusercontent.com/dw-0/kiauh/master/resources/gcode_shell_command.py
[gcode_shell_command config_pull]
command: ~/printer_data/config/printerconfig/tools/config_pull.sh
timeout: 30.0
verbose: True

[gcode_macro CONFIG_PULL]
description: Pull config from GitHub
gcode:
  RUN_SHELL_COMMAND CMD=config_pull

[gcode_shell_command config_backup]
command: ~/printer_data/config/printerconfig/tools/config_backup.sh
timeout: 30.0
verbose: True

[gcode_macro CONFIG_BACKUP]
description: Backs up config to GitHub
gcode:
  RUN_SHELL_COMMAND CMD=config_backup

[gcode_shell_command clean_filesystem]
command: ~/printer_data/config/printerconfig/tools/clean_tempfiles.sh
timeout: 30.0
verbose: True

[gcode_macro _clean_filesystem]
description: Removes old files
gcode:
  RUN_SHELL_COMMAND CMD=clean_filesystem

[gcode_shell_command query_updates]
command: wget -O/dev/null --post-data '' http://127.0.0.0/machine/update/refresh
timeout: 60.0
verbose: True

[gcode_macro _query_updates]
description: Request update check on all repos configured in moonraker
gcode:
  RUN_SHELL_COMMAND CMD=query_updates

[gcode_shell_command cpufreq_set]
command: sh -c "sudo /usr/bin/cpufreq-set -g $0"
timeout: 5.0
verbose: True

[gcode_macro _cpufreq_set]
description: set cpu governor
gcode:
  {% set governor = params.GOVERNOR|default("performance") %}
  RESPOND MSG='{"CPU set to %s" % (governor)}'
  RUN_SHELL_COMMAND CMD=cpufreq_set PARAMS={governor}

[delayed_gcode detecht_tool_on_boot]
initial_duration: 4
gcode: 
  _cpufreq_set GOVERNOR=performance

[gcode_shell_command patch_klipper]
command: ~/printer_data/config/printerconfig/tools/patch_klipper.sh
timeout: 10.0
verbose: True

[gcode_macro _patch_klipper]
description: applies fixed after klipper update
gcode:
  RUN_SHELL_COMMAND CMD=patch_klipper